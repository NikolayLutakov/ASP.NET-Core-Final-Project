@model CardListingViewModel

@{
    ViewData["Title"] = "My Cards";
    ViewBag.CurrentPage = Model.CurrentPage;
}

<partial name="_NotificationsPartial" />

<h2 class="text-center text-primary">@ViewData["Title"]</h2>

<div class="mb-3">
    <a class="btn btn-success" asp-area="" asp-controller="Card" asp-action="Add">Add Card</a>
    <a class="btn btn-light" asp-area="" asp-controller="Home" asp-action="Index">Back</a>
</div>

@if (!Model.Cards.Any())
{
    <h2 class="text-center">You don't have cards yet.</h2>
}
else
{
    <partial name="_CardsListingPartial" model="@Model.Cards" />



    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalCards / CardListingViewModel.CardsPerPage);

    var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
                                 !Model.Cards.Any();



    <div class="paging">
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                <li class="page-item">
                    <a class="page-link btn @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
                       asp-controller="Card"
                       asp-action="Index"
                       asp-route-currentPage="@previousPage">Previous</a>
                </li>
                <li class="page-item"><a class="page-link btn disabled" href="#">@Model.CurrentPage of @maxPage</a></li>
                <li class="page-item">
                    <a class="page-link btn @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
                       asp-controller="Card"
                       asp-action="Index"
                       asp-route-currentPage="@(Model.CurrentPage + 1)">Next</a>
                </li>
            </ul>
        </nav>
    </div>
}

@section Scripts{
    <script>
        $(".alert").fadeTo(2000, 500).slideUp(500, function () {
            $(".salert").slideUp(500);
        });
    </script>
}